{"version":3,"sources":["fbBase.js","components/Sweet.js","components/SweetFactory.js","routes/Home.js","components/AuthForm.js","components/SocialLogin.js","routes/Auth.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/Footer.js","components/App.js","index.js"],"names":["initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","getAuth","provider","GoogleAuthProvider","dbService","getFirestore","storageService","getStorage","SweetContainer","styled","div","SweetText","h3","SweetEditContainer","form","SweetInput","input","SweetImg","img","SweetAction","ButtonContainer","Button","button","Sweet","sweetObject","isOwner","useState","isEditing","setEditing","text","newSweet","setNewSweet","deleteSweet","a","window","confirm","deleteDoc","doc","id","attachmentUrl","deleteObject","ref","then","alert","catch","error","console","log","updateSweet","updateDoc","prev","onSubmit","type","value","placeholder","required","onChange","e","target","className","onClick","src","width","height","alt","icon","faPencilAlt","faTrash","FactoryContainer","FactoryForm","FactoryInput","FactoryLabel","label","FactoryImage","props","attachment","SweetFactory","userObject","sweet","setSweet","setAttachment","preventDefault","attachmentRef","uid","v4","uploadString","response","getDownloadURL","newSweetObject","createAt","Date","now","creatorId","addDoc","collection","maxLength","htmlFor","faPlus","accept","imageFile","files","fileReader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","style","opacity","Home","sweetList","setSweetList","useEffect","unsubscribe","onSnapshot","snapShot","sweetArray","docs","map","data","onAuthStateChanged","user","Container","AuthInput","AuthError","span","AuthSwitchButton","AuthForm","email","setEmail","password","setPassword","isNewAccount","setNewAccount","setError","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","code","autoComplete","AuthButton","SocialLogin","onSocialLogin","signInWithPopup","faGoogle","Auth","faTwitter","color","size","marginBottom","ProfileForm","LogoutBtn","Profile","refreshUser","displayName","newDisplayName","setNewDisplayName","navigate","useNavigate","getMySweet","query","where","mySweets","getDocs","forEach","updateProfile","signOut","List","ul","Item","li","current","NavLink","Link","Navigation","location","useLocation","pathname","to","faUser","AppRouter","isLoggedIn","exact","path","element","footer","Footer","getFullYear","App","init","setInit","setIsLoggedIn","setUserObject","userName","substring","indexOf","currentUser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3d22e809.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { GoogleAuthProvider } from \"firebase/auth\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getStorage } from \"firebase/storage\";\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\ninitializeApp(firebaseConfig);\nexport const authService = getAuth();\nexport const provider = new GoogleAuthProvider();\nexport const dbService = getFirestore();\nexport const storageService = getStorage();\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { deleteDoc, doc, updateDoc } from \"firebase/firestore\";\nimport { deleteObject, ref } from \"firebase/storage\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { dbService, storageService } from \"../fbBase\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst SweetContainer = styled.div`\n  margin-bottom: 20px;\n  background-color: white;\n  width: 100%;\n  max-width: 320px;\n  padding: 8px 16px;\n  border: 1px solid #d4d4d4;\n  border-radius: 10px;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  color: rgba(0, 0, 0, 0.8);\n  margin-bottom: 32px;\n`;\n\nconst SweetText = styled.h3`\n  font-size: 12px;\n`;\n\nconst SweetEditContainer = styled.form`\n  cursor: pointer;\n  margin-top: 15px;\n  margin-bottom: 5px;\n`;\n\nconst SweetInput = styled.input`\n  width: 100%;\n  border-radius: 20px;\n  border: 1px solid #c4c4c4;\n  color: black;\n  padding: 7px 0px !important;\n  margin-bottom: 12px;\n  cursor: auto;\n`;\n\nconst SweetImg = styled.img`\n  right: -10px;\n  top: 16px;\n  position: absolute;\n  border-radius: 50%;\n  background-color: white;\n  width: 50px;\n  height: 50px;\n  margin-top: 10px;\n  box-shadow: 2px 2px 2px #dddddd;\n`;\n\nconst SweetAction = styled.div`\n  position: absolute;\n  right: 10px;\n  top: 8px;\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\nconst Button = styled.button`\n  outline: none;\n  border: none;\n  font-size: 14px;\n`;\n\nconst Sweet = ({ sweetObject, isOwner }) => {\n  const [isEditing, setEditing] = useState(false);\n  const [newSweet, setNewSweet] = useState(sweetObject.text);\n  const deleteSweet = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this sweet?\");\n\n    if (ok) {\n      await deleteDoc(doc(dbService, \"sweets\", sweetObject.id));\n      if (sweetObject.attachmentUrl !== \"\") {\n        await deleteObject(ref(storageService, sweetObject.attachmentUrl))\n          .then(() => {\n            alert(\"삭제되었습니다:(\");\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n      }\n    } else {\n      return;\n    }\n  };\n\n  const editSweet = () => {\n    setEditing((prev) => !prev);\n  };\n\n  const onChange = (e) => {\n    setNewSweet(e.target.value);\n  };\n\n  const updateSweet = async () => {\n    await updateDoc(doc(dbService, \"sweets\", sweetObject.id), {\n      text: newSweet,\n    });\n\n    setEditing((prev) => !prev);\n  };\n\n  return (\n    <SweetContainer>\n      {isEditing ? (\n        <>\n          <SweetEditContainer onSubmit={updateSweet}>\n            <SweetInput\n              type=\"text\"\n              value={newSweet}\n              placeholder=\"edit sweet\"\n              required\n              onChange={onChange}\n            />\n            <ButtonContainer>\n              <input type=\"submit\" value=\"update\" className=\"formBtn\" />\n              <input\n                type=\"button\"\n                onClick={() => setEditing((prev) => !prev)}\n                className=\"formBtn cancelBtn\"\n                value=\"cancel\"\n              />\n            </ButtonContainer>\n          </SweetEditContainer>\n        </>\n      ) : (\n        <div>\n          <SweetText>{sweetObject.text}</SweetText>\n          {sweetObject.attachmentUrl !== \"\" ? (\n            <SweetImg\n              src={sweetObject.attachmentUrl}\n              width=\"100px\"\n              height=\"100px\"\n              alt=\"userImg\"\n            />\n          ) : null}\n          {isOwner && (\n            <SweetAction>\n              <Button onClick={editSweet}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </Button>\n              <Button onClick={deleteSweet}>\n                <FontAwesomeIcon icon={faTrash} />\n              </Button>\n            </SweetAction>\n          )}\n        </div>\n      )}\n    </SweetContainer>\n  );\n};\n\nexport default Sweet;\n","import React, { useState } from \"react\";\nimport { getDownloadURL, ref, uploadString } from \"firebase/storage\";\nimport { addDoc, collection } from \"firebase/firestore\";\nimport { dbService, storageService } from \"../fbBase\";\nimport { v4 } from \"uuid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport styled from \"styled-components\";\n\nconst FactoryContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: wrap;\n  position: relative;\n  margin-bottom: 20px;\n`;\n\nconst FactoryForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n`;\n\nconst FactoryInput = styled.input`\n  flex-grow: 1;\n  height: 40px;\n  width: 320px;\n  padding-left: 10px;\n  color: white;\n  border: 1px solid #04aaff;\n  border-radius: 20px;\n  font-weight: 500;\n  font-size: 12px;\n`;\n\nconst FactoryLabel = styled.label`\n  color: #04aaff;\n  cursor: pointer;\n\n  span {\n    margin-right: 10px;\n    font-size: 12px;\n  }\n`;\n\nconst FactoryImage = styled.img`\n  height: 80px;\n  width: 80px;\n  border-radius: 40px;\n  background-image: ${(props) => props.attachment};\n`;\n\nconst SweetFactory = ({ userObject }) => {\n  const [sweet, setSweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = ref(storageService, `${userObject.uid}/${v4()}`);\n      const response = await uploadString(\n        attachmentRef,\n        attachment,\n        \"data_url\"\n      );\n      attachmentUrl = await getDownloadURL(response.ref);\n    }\n    const newSweetObject = {\n      text: sweet,\n      createAt: Date.now(),\n      creatorId: userObject.uid,\n      attachmentUrl,\n    };\n    try {\n      await addDoc(collection(dbService, \"sweets\"), newSweetObject);\n      setSweet(\"\");\n      setAttachment(\"\");\n    } catch (error) {\n      console.log(`ERROR:`, error);\n    }\n  };\n  const onChange = (e) => {\n    const {\n      target: { value },\n    } = e;\n\n    setSweet(value);\n  };\n\n  // file upload\n  const onFileChange = (e) => {\n    const {\n      target: { files },\n    } = e;\n\n    const imageFile = files[0];\n    const fileReader = new FileReader();\n    fileReader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    fileReader.readAsDataURL(imageFile); // reader를 사용하여 파일을 읽을 것\n  };\n\n  return (\n    <FactoryForm onSubmit={onSubmit}>\n      <FactoryContainer>\n        <FactoryInput\n          value={sweet}\n          type=\"text\"\n          placeholder=\"what's on your mind?\"\n          onChange={onChange}\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </FactoryContainer>\n\n      <FactoryLabel htmlFor=\"attach-file\">\n        <span>Add Photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </FactoryLabel>\n      <input\n        type=\"file\"\n        id=\"attach-file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{ opacity: 0 }}\n      />\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <FactoryLabel>\n            <FactoryImage\n              src={attachment}\n              width=\"50px\"\n              height=\"50px\"\n              alt=\"sweetImg\"\n              attachment={attachment}\n            />\n          </FactoryLabel>\n        </div>\n      )}\n    </FactoryForm>\n  );\n};\n\nexport default SweetFactory;\n","import { onAuthStateChanged } from \"firebase/auth\";\nimport { collection, onSnapshot } from \"firebase/firestore\";\nimport React, { useEffect, useState } from \"react\";\nimport Sweet from \"../components/Sweet\";\nimport SweetFactory from \"../components/SweetFactory\";\nimport { authService, dbService } from \"../fbBase\";\n\nconst Home = ({ userObject }) => {\n  const [sweetList, setSweetList] = useState([]);\n\n  // snapshot - db에 변경을 알림\n  useEffect(() => {\n    const unsubscribe = onSnapshot(\n      collection(dbService, \"sweets\"),\n      (snapShot) => {\n        const sweetArray = snapShot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n\n        setSweetList(sweetArray);\n      }\n    );\n\n    onAuthStateChanged(authService, (user) => {\n      if (user == null) {\n        unsubscribe();\n      }\n    });\n\n    return () => {\n      setSweetList([]);\n    };\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <SweetFactory userObject={userObject} />\n      {sweetList.map((sweet) => (\n        <Sweet\n          key={sweet.id}\n          sweetObject={sweet}\n          isOwner={sweet.creatorId === userObject.uid}\n        />\n      ))}\n    </div>\n  );\n};\nexport default Home;\n","import {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n} from \"firebase/auth\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { authService } from \"../fbBase\";\n\nconst Container = styled.form`\n  width: 100%;\n  max-width: 320px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst AuthInput = styled.input`\n  max-width: 320px;\n  width: 320px;\n  padding: 10px;\n  border-radius: 30px;\n  background-color: rgba(255, 255, 255, 1);\n  margin-bottom: 10px;\n  font-size: 12px;\n  color: black;\n`;\n\nconst AuthError = styled.span`\n  color: tomato;\n  text-align: center;\n  font-weight: 500;\n  font-size: 12px;\n`;\n\nconst AuthSwitchButton = styled.span`\n  color: #04aaff;\n  cursor: pointer;\n  margin-top: 10px;\n  margin-bottom: 50px;\n  display: block;\n  font-size: 12px;\n  text-align: center;\n`;\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isNewAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n  const toggleAccount = () => setNewAccount(!isNewAccount);\n  const onChange = (e) => {\n    const {\n      target: { name, value },\n    } = e;\n\n    if (name === \"email\") setEmail(value);\n    else if (name === \"password\") setPassword(value);\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      let data;\n      console.log(\"onSubmit()....\");\n      if (isNewAccount) {\n        // create new User\n        data = await createUserWithEmailAndPassword(\n          authService,\n          email,\n          password\n        );\n      } else {\n        // login\n        data = await signInWithEmailAndPassword(authService, email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.code);\n    }\n  };\n\n  return (\n    <Container onSubmit={onSubmit}>\n      <AuthInput\n        name=\"email\"\n        type=\"email\"\n        placeholder=\"E-Mail\"\n        required\n        value={email}\n        onChange={onChange}\n        autoComplete=\"off\"\n      />\n      <AuthInput\n        name=\"password\"\n        type=\"password\"\n        placeholder=\"Password\"\n        required\n        value={password}\n        onChange={onChange}\n        autoComplete=\"off\"\n      />\n      <AuthInput\n        className=\"authSubmit\"\n        type=\"submit\"\n        value={isNewAccount ? \"Create Account\" : \"Login\"}\n      />\n      <AuthSwitchButton onClick={toggleAccount}>\n        {isNewAccount ? \"회원가입하기\" : \"로그인하기\"}\n      </AuthSwitchButton>\n      {error && <AuthError>{error}</AuthError>}\n    </Container>\n  );\n};\n\nexport default AuthForm;\n","import React from \"react\";\nimport { authService, provider } from \"../fbBase\";\nimport { signInWithPopup } from \"firebase/auth\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGoogle } from \"@fortawesome/free-brands-svg-icons\";\nconst AuthButton = styled.button`\n  cursor: pointer;\n  border-radius: 20px;\n  border: none;\n  padding: 10px 0px;\n  font-size: 12px;\n  text-align: center;\n  width: 150px;\n  background: white;\n  cursor: pointer;\n  margin-top: 12px;\n`;\n\nconst SocialLogin = () => {\n  const onSocialLogin = async () => {\n    await signInWithPopup(authService, provider);\n  };\n  return (\n    <AuthButton onClick={onSocialLogin}>\n      Continue with Google <FontAwesomeIcon icon={faGoogle} />\n    </AuthButton>\n  );\n};\n\nexport default SocialLogin;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport AuthForm from \"../components/AuthForm\";\nimport SocialLogin from \"../components/SocialLogin\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Auth = () => {\n  return (\n    <Container>\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <SocialLogin />\n    </Container>\n  );\n};\n\nexport default Auth;\n","import { updateProfile } from \"firebase/auth\";\nimport { collection, getDocs, query, where } from \"firebase/firestore\";\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { authService, dbService } from \"../fbBase\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 32px;\n`;\n\nconst ProfileForm = styled.form`\n  border-bottom: 1px solid rgba(255, 255, 255, 0.9);\n  padding-bottom: 30px;\n  margin-bottom: 12px;\n  display: flex;\n  width: 320px;\n  flex-direction: column;\n`;\n\nconst LogoutBtn = styled.button`\n  outline: none;\n  border: none;\n  background-color: tomato;\n  font-size: 14px;\n`;\n\nconst Profile = ({ userObject, refreshUser }) => {\n  const [newDisplayName, setNewDisplayName] = useState(userObject.displayName);\n  const navigate = useNavigate();\n  const onLogout = () => {\n    authService.signOut();\n    navigate(\"/\");\n  };\n\n  const getMySweet = async () => {\n    const mySweets = await query(\n      collection(dbService, \"sweets\"),\n      where(\"creatorId\", \"==\", userObject.uid)\n    );\n\n    const querySnapshot = await getDocs(mySweets);\n    querySnapshot.forEach((doc) => {\n      console.log(doc.id, \" => \", doc.data());\n    });\n  };\n\n  useEffect(() => {\n    getMySweet();\n  }, []);\n\n  const onChange = (e) => {\n    const {\n      target: { value },\n    } = e;\n    setNewDisplayName(value);\n  };\n  const onSubmit = async (e) => {\n    e.preventDefault();\n\n    // 변경됐다면 update\n    if (newDisplayName !== userObject.displayName) {\n      await updateProfile(userObject, { displayName: newDisplayName });\n      refreshUser();\n      alert(\"업데이트되었습니다:)\");\n    } else {\n      return;\n    }\n  };\n\n  return (\n    <Container>\n      <ProfileForm onSubmit={onSubmit}>\n        <input\n          className=\"formInput profile_input\"\n          type=\"text\"\n          placeholder=\"Display name\"\n          value={newDisplayName}\n          onChange={onChange}\n        />\n        <input type=\"submit\" value=\"Update Profile\" className=\"formBtn\" />\n      </ProfileForm>\n\n      <LogoutBtn onClick={onLogout} className=\"formBtn\">\n        Logout\n      </LogoutBtn>\n    </Container>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst List = styled.ul`\n  display: flex;\n  justify-content: center;\n  margin-top: 50px;\n  list-style: none;\n`;\n\nconst Item = styled.li`\n  color: ${(props) => (props.current ? \"#04aaff\" : \"#ffffff\")};\n`;\n\nconst NavLink = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-size: 10px;\n  text-decoration: none;\n\n  &:first-child {\n    margin-right: 32px;\n  }\n`;\n\nconst Navigation = () => {\n  const location = useLocation();\n\n  return (\n    <nav>\n      <List>\n        <Item current={location.pathname === \"/\"}>\n          <NavLink to=\"/\">\n            <FontAwesomeIcon icon={faTwitter} size=\"2x\" />\n          </NavLink>\n        </Item>\n        <Item current={location.pathname === \"/profile\"}>\n          <NavLink to=\"/profile\">\n            <FontAwesomeIcon icon={faUser} size=\"2x\" />\n          </NavLink>\n        </Item>\n      </List>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Routes } from \"react-router-dom\";\nimport Home from \"../routes/Home\";\nimport Auth from \"../routes/Auth\";\nimport Profile from \"../routes/Profile\";\nimport Navigation from \"./Navigation\";\nconst AppRouter = ({ refreshUser, isLoggedIn, userObject }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObject={userObject} />}\n      <div className=\"router_container\">\n        <Routes>\n          {isLoggedIn ? (\n            <>\n              <Route\n                exact\n                path=\"/\"\n                element={\n                  <Home userObject={userObject} refreshUser={refreshUser} />\n                }\n              />\n              <Route\n                exact\n                path=\"/profile\"\n                element={\n                  <Profile userObject={userObject} refreshUser={refreshUser} />\n                }\n              />\n            </>\n          ) : (\n            <Route exact path=\"/\" element={<Auth />} />\n          )}\n        </Routes>\n      </div>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.footer`\n  position: absolute;\n  bottom: 0;\n  text-align: center;\n  width: 100%;\n`;\n\nconst Footer = () => {\n  return (\n    <Container>\n      &copy; {new Date().getFullYear()} Sweeter with Nomad Coders\n    </Container>\n  );\n};\n\nexport default Footer;\n","import AppRouter from \"./Router\";\nimport React, { useEffect, useState } from \"react\";\nimport { authService } from \"../fbBase\";\nimport { updateProfile } from \"firebase/auth\";\nimport Footer from \"./Footer\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObject, setUserObject] = useState({});\n  //const [newUserName, setNewUserName] = useState(\"\");\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObject(user);\n    //setNewUserName(user.displayName);\n  };\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        if (user.displayName === null) {\n          const userName = user.email.substring(0, user.email.indexOf(\"@\"));\n          updateProfile(user, { displayName: userName });\n        }\n        setUserObject(user);\n        setIsLoggedIn(true);\n      } else {\n        setIsLoggedIn(false);\n        setUserObject(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          userObject={userObject}\n          isLoggedIn={isLoggedIn}\n        />\n      ) : (\n        \"initializing...\"\n      )}\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"../src/index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}